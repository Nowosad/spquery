[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 spquery authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jakub Nowosad. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Nowosad J (2023). spquery: Queries Spatial Raster Data. R package version 0.0.4, https://jakubnowosad.com/spquery/.","code":"@Manual{,   title = {spquery: Queries on Spatial Raster Data},   author = {Jakub Nowosad},   year = {2023},   note = {R package version 0.0.4},   url = {https://jakubnowosad.com/spquery/}, }"},{"path":"/index.html","id":"spquery","dir":"","previous_headings":"","what":"Queries on Spatial Raster Data","title":"Queries on Spatial Raster Data","text":"spquery package performs several queries based spatial raster data.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Queries on Spatial Raster Data","text":"can install development version spquery GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"Nowosad/spquery\")"},{"path":"/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Queries on Spatial Raster Data","text":"","code":"library(terra) #> terra 1.5.41 library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.3, PROJ 8.2.1; sf_use_s2() is TRUE library(spquery) ta = rast(system.file(\"raster/ta_scaled.tif\", package = \"spquery\"))[[1:4]] plot(ta, nr = 1) pr = rast(system.file(\"raster/pr_scaled.tif\", package = \"spquery\"))[[1:4]] plot(pr, nr = 1)"},{"path":"/index.html","id":"comparison","dir":"","previous_headings":"Example","what":"Comparison","title":"Queries on Spatial Raster Data","text":"","code":"re = spq_compare(ta, pr, dist_fun = \"jensen-shannon\") plot(re)"},{"path":"/index.html","id":"contribution","dir":"","previous_headings":"","what":"Contribution","title":"Queries on Spatial Raster Data","text":"Contributions package welcome - let us know need distance measures transformations, suggestions, spotted bug. preferred method contribution GitHub pull request. Feel also free contact us creating issue.","code":""},{"path":"/reference/spq_collapse.html","id":null,"dir":"Reference","previous_headings":"","what":"Title (TBD) — spq_collapse","title":"Title (TBD) — spq_collapse","text":"Title (TBD)","code":""},{"path":"/reference/spq_collapse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title (TBD) — spq_collapse","text":"","code":"spq_collapse(x, window, fun = c, ...)"},{"path":"/reference/spq_collapse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title (TBD) — spq_collapse","text":"x object class SpatRaster (terra) window length side square-shaped block cells. Expressed numbers cells, defines extent local pattern. fun Function summarize values given window. default, c, returns values inside specified windows. ... Additional arguments terra::extract specified function","code":""},{"path":"/reference/spq_collapse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title (TBD) — spq_collapse","text":"object class SpatRaster (terra)","code":""},{"path":"/reference/spq_collapse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title (TBD) — spq_collapse","text":"","code":"library(terra) #> terra 1.7.8 x = rast(system.file(\"raster/ta_scaled.tif\", package = \"spquery\")) xc = spq_collapse(x, window = 5) plot(xc)"},{"path":"/reference/spq_compare.html","id":null,"dir":"Reference","previous_headings":"","what":"Compares values between two rasters — spq_compare","title":"Compares values between two rasters — spq_compare","text":"Compares values two rasters based given distance measure.","code":""},{"path":"/reference/spq_compare.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compares values between two rasters — spq_compare","text":"","code":"spq_compare(x, y, dist_fun, ...)"},{"path":"/reference/spq_compare.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compares values between two rasters — spq_compare","text":"x object class SpatRaster (terra) y object class SpatRaster (terra) dist_fun Distance measure used. function uses philentropy::distance function (run philentropy::getDistMethods() find possible distance measures), proxy::dist  background. also possible use \"dtw\" (dynamic time warping) ... Additional arguments philentropy::dist_one_one, proxy::dist, dtwclust::dtw_basic. dist_fun = \"dtw\" used, ndim set specify many dimension input raster time-series .","code":""},{"path":"/reference/spq_compare.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compares values between two rasters — spq_compare","text":"object class SpatRaster (terra)","code":""},{"path":"/reference/spq_compare.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compares values between two rasters — spq_compare","text":"","code":"library(terra) library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.2, PROJ 8.2.1; sf_use_s2() is TRUE ta = rast(system.file(\"raster/ta_scaled.tif\", package = \"spquery\")) pr = rast(system.file(\"raster/pr_scaled.tif\", package = \"spquery\"))  re = spq_compare(ta, pr, dist_fun = \"jensen-shannon\") plot(re)"},{"path":"/reference/spq_search.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for areas with similar values — spq_search","title":"Search for areas with similar values — spq_search","text":"Searches areas similar values query.","code":""},{"path":"/reference/spq_search.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for areas with similar values — spq_search","text":"","code":"spq_search(x, y, dist_fun, ...)"},{"path":"/reference/spq_search.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for areas with similar values — spq_search","text":"x numeric vector y object class SpatRaster (terra) dist_fun Distance measure used. function uses philentropy::distance function (run philentropy::getDistMethods() find possible distance measures), proxy::dist  background. also possible use \"dtw\" (dynamic time warping) ... Additional arguments philentropy::dist_one_one, proxy::dist, dtwclust::dtw_basic. dist_fun = \"dtw\" used, ndim set specify many dimension input raster time-series .","code":""},{"path":"/reference/spq_search.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for areas with similar values — spq_search","text":"object class SpatRaster (terra)","code":""},{"path":"/reference/spq_search.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for areas with similar values — spq_search","text":"","code":"library(terra) library(sf) ta = rast(system.file(\"raster/ta_scaled.tif\", package = \"spquery\")) pr = rast(system.file(\"raster/pr_scaled.tif\", package = \"spquery\")) twor = c(ta, pr) london = st_sf(geom = st_sfc(st_point(c(-0.1, 51.5))), crs = \"EPSG:4326\") london_vector = as.numeric(extract(twor, london, ID = FALSE))  re = spq_search(london_vector, twor, dist_fun = \"euclidean\") plot(re)   #re2 = spq_search(london_vector, twor, dist_fun = \"dtw\", ndim = 2, norm = \"L2\") #plot(re2)"},{"path":"/reference/spquery-package.html","id":null,"dir":"Reference","previous_headings":"","what":"spquery: Queries on Spatial Raster Data — spquery-package","title":"spquery: Queries on Spatial Raster Data — spquery-package","text":"Performs several queries based spatial raster data. allows searching areas similar values query comparing values two rasters based given distance measure.","code":""},{"path":[]},{"path":"/reference/spquery-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"spquery: Queries on Spatial Raster Data — spquery-package","text":"Maintainer: Jakub Nowosad nowosad.jakub@gmail.com (ORCID)","code":""}]
